"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять
список. Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не
остановит работу скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список
выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе
пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class OwnError(Exception):
    def __init__(self, txt=''):
        self.txt = txt


user_list = []

while True:
    user_input = input("Введите число или 'stop' для выхода\n>>>")

    try:
        if user_input.isdigit():
            user_list.append(int(user_input))
        else:
            raise OwnError('Вы ввели не число')
    except OwnError as err:
        if user_input.lower() == 'stop':
            print(user_list)
            break
        print(err)
